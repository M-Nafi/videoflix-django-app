"""
Django settings for videoflix_app project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
from datetime import timedelta
load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-(6or@t(ffo$j26w3tpud#&a$ad-t_q0&v%3m01%m($q6m60ix^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1', '[::1]']
# Custom user model here
AUTH_USER_MODEL = 'user_auth_app.User'
SITE_ID = 1

# allauth-Konfiguration
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_SIGNUP_FIELDS = ['email*', 'password1*', 'password2*',]
ACCOUNT_LOGIN_METHODS = {'email'}
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_CONFIRM_EMAIL_ON_GET = True
ACCOUNT_DEFAULT_HTTP_PROTOCOL = "http"
ACCOUNT_ADAPTER = "user_auth_app.adapter.HTMLOnlyAccountAdapter"

# ----------------------------------------
# dj-rest-auth JWT Settings
# ----------------------------------------
REST_AUTH = {
    'REGISTER_SERIALIZER': 'user_auth_app.api.serializers.CustomRegisterSerializer',
    'USE_JWT': True,
    'SESSION_LOGIN' : False,
    'JWT_AUTH_COOKIE' : 'access_token',
    'JWT_AUTH_REFRESH_COOKIE' : 'refresh_token',
    'JWT_AUTH_COOKIE_USE_CSRF' : True,
    'JWT_AUTH_COOKIE_ENFORCE_CSRF_ON_UNAUTHENTICATED' : True,
    'JWT_AUTH_HTTPONLY' : True,
    'JWT_AUTH_SECURE' : False,
    'JWT_AUTH_SAMESITE' : 'Lax',
}


# ----------------------------------------
# Simple JWT Settings
# ----------------------------------------
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),   # <-- kurzlebig :contentReference[oaicite:15]{index=15}
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),     # <-- lÃ¤ngere Nutzungsdauer :contentReference[oaicite:16]{index=16}
    'ROTATE_REFRESH_TOKENS': True,                   # <-- Token-Rotation :contentReference[oaicite:17]{index=17}
    'BLACKLIST_AFTER_ROTATION': True,                # <-- Blacklist alter Tokens :contentReference[oaicite:18]{index=18}
    'UPDATE_LAST_LOGIN': False,                      # optional
    'AUTH_HEADER_TYPES': ('Bearer',),
}

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'corsheaders',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'dj_rest_auth',
    'dj_rest_auth.registration',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'user_auth_app',
    'drf_spectacular',
    'media_content_app',
]


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

CSRF_TRUSTED_ORIGINS = [

  'http://127.0.0.1:5500',
  'http://localhost:5500',
  'http://localhost:4200',

]

CORS_ALLOWED_ORIGINS = [

  'http://127.0.0.1:5500',
  'http://localhost:5500',
  'http://localhost:4200',

]
CORS_ALLOW_HEADERS = [
'content-type',
'x-csrftoken',
]
CORS_ALLOW_CREDENTIALS = True

ROOT_URLCONF = 'videoflix_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'videoflix_app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'dj_rest_auth.jwt_auth.JWTCookieAuthentication',
        #'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ],
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    
    'DEFAULT_THROTTLE_RATES': {
        'anon': '5/second',
        'user': '20/second',
        'contact': '20/second',
        'contact-get': '20/second',
        'contact-post': '20/second'
        
    },
    
    #'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

LOGIN_URL = "/admin"

# Django SMTP
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')
EMAIL_HOST = os.environ.get('EMAIL_HOST', 'smtp.gmail.com')
EMAIL_PORT = int(os.environ.get('EMAIL_PORT', 587))
EMAIL_USE_TLS = os.environ.get('EMAIL_USE_TLS', 'True') == 'True'

# SPECTACULAR_SETTINGS = {
#     'TITLE': 'Videoflix API',
#     'DESCRIPTION': 'A simple API for the video streaming WebApp Videoflix',
#     'VERSION': '1.0.0',
#     'SERVE_INCLUDE_SCHEMA': False,
# }
